# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug test'
  displayName: gradlew assembleDebug test

- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: Copy .apk files to artifact staging directory

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: 'drop'
    artifactType: 'container'
  displayName: Publish artifacts

trigger:
  - develop

jobs:
  - job: Blackduck
    displayName: Blackduck Scan
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            export DETECT_PROJECT_NAME="$(DETECT_PROJECT_NAME)"
            export DETECT_PROJECT_VERSION_NAME="$(DETECT_PROJECT_VERSION_NAME)"
            export BLACKDUCK_URL="$(BLACKDUCK_URL)"
            export BLACKDUCK_API_TOKEN="$(BLACKDUCK_API_TOKEN)"
            export DETECT_BDIO_OUTPUT_PATH="$(DETECT_BDIO_OUTPUT_PATH)"
            export DETECT_DETECTOR_SEARCH_EXCLUSION="$(DETECT_DETECTOR_SEARCH_EXCLUSION)"
            export DETECT_INCLUDED_DETECTOR_TYPES="$(DETECT_INCLUDED_DETECTOR_TYPES)"
            export DETECT_REPORT_TIMEOUT="$(DETECT_REPORT_TIMEOUT)"
            export DETECT_RISK_REPORT_PDF="$(DETECT_RISK_REPORT_PDF)"
            export DETECT_RISK_REPORT_PDF_PATH="$(DETECT_RISK_REPORT_PDF_PATH)"
            bash <(curl -s -L https://detect.synopsys.com/detect.sh)
